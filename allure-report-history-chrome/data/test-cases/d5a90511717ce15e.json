{"uid":"d5a90511717ce15e","name":"Modal dialogs","fullName":"tests.test_windows.TestWindows#test_modal_dialogs","historyId":"71c8f1108d6b81b71e1b035678e839be","time":{"start":1712914762729,"stop":1712914765844,"duration":3115},"status":"failed","statusMessage":"AssertionError: Invalid message to large modal","statusTrace":"self = <test_windows.TestWindows object at 0x7f76440e5bb0>\n\n    @allure.title(\"Modal dialogs\")\n    def test_modal_dialogs(self):\n        self.modal_dialogs.open()\n        self.modal_dialogs.is_opened()\n        self.modal_dialogs.click_button_small_modal()\n        self.modal_dialogs.check_small_modal()\n        self.modal_dialogs.click_button_large_modal()\n>       self.modal_dialogs.check_large_modal()\n\ntests/test_windows.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.windows.modal_dialogs.ModalDialogs object at 0x7f7643f921e0>\n\n    @allure.step(\"Checking a large modal dialogs\")\n    def check_large_modal(self):\n        self.wait.until(EC.visibility_of_element_located(self.MODAL))\n        massage = self.wait.until(EC.visibility_of_element_located(self.MESSAGE_LARGE_MODAL)).text\n        self.wait.until(EC.element_to_be_clickable(self.BUTTON_CLOSE_LARGE)).click()\n>       assert massage == self.TEXT_LARGE_MODAL, 'Invalid message to large modal'\nE       AssertionError: Invalid message to large modal\n\npages/windows/modal_dialogs.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712914528831,"stop":1712914528848,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"tmp_path_factory","time":{"start":1712914528848,"stop":1712914528848,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"tmp_path","time":{"start":1712914762103,"stop":1712914762104,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"tmpdir","time":{"start":1712914762104,"stop":1712914762104,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1712914762104,"stop":1712914762285,"duration":181},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"environment_allure","time":{"start":1712914762286,"stop":1712914762286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1712914762286,"stop":1712914762729,"duration":443},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Invalid message to large modal","statusTrace":"self = <test_windows.TestWindows object at 0x7f76440e5bb0>\n\n    @allure.title(\"Modal dialogs\")\n    def test_modal_dialogs(self):\n        self.modal_dialogs.open()\n        self.modal_dialogs.is_opened()\n        self.modal_dialogs.click_button_small_modal()\n        self.modal_dialogs.check_small_modal()\n        self.modal_dialogs.click_button_large_modal()\n>       self.modal_dialogs.check_large_modal()\n\ntests/test_windows.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.windows.modal_dialogs.ModalDialogs object at 0x7f7643f921e0>\n\n    @allure.step(\"Checking a large modal dialogs\")\n    def check_large_modal(self):\n        self.wait.until(EC.visibility_of_element_located(self.MODAL))\n        massage = self.wait.until(EC.visibility_of_element_located(self.MESSAGE_LARGE_MODAL)).text\n        self.wait.until(EC.element_to_be_clickable(self.BUTTON_CLOSE_LARGE)).click()\n>       assert massage == self.TEXT_LARGE_MODAL, 'Invalid message to large modal'\nE       AssertionError: Invalid message to large modal\n\npages/windows/modal_dialogs.py:44: AssertionError","steps":[{"name":"Open URL","time":{"start":1712914762730,"stop":1712914764109,"duration":1379},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check is opened URL","time":{"start":1712914764109,"stop":1712914764113,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click button small modal","time":{"start":1712914764113,"stop":1712914764175,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Checking a small modal dialogs","time":{"start":1712914764176,"stop":1712914764473,"duration":297},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click button large modal","time":{"start":1712914764473,"stop":1712914764729,"duration":256},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Checking a large modal dialogs","time":{"start":1712914764730,"stop":1712914765844,"duration":1114},"status":"failed","statusMessage":"AssertionError: Invalid message to large modal\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/demoqa_ui/demoqa_ui/pages/windows/modal_dialogs.py\", line 44, in check_large_modal\n    assert massage == self.TEXT_LARGE_MODAL, 'Invalid message to large modal'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1712914765849,"stop":1712914766156,"duration":307},"status":"passed","steps":[],"attachments":[{"uid":"f07b084dcafe8a29","name":"test_modal_dialogs.png","source":"f07b084dcafe8a29.png","type":"image/png","size":687342}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"tmp_path::0","time":{"start":1712914766157,"stop":1712914766157,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Alert, Frame and Windows"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_windows"},{"name":"subSuite","value":"TestWindows"},{"name":"host","value":"fv-az1393-121"},{"name":"thread","value":"1885-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_windows"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d5a90511717ce15e.json","parameterValues":[]}